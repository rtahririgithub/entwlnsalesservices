<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns:wss="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:ping="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v1"
                  xmlns:ex="http://xmlschema.tmi.telus.com/xsd/common/exceptions/Exceptions_v1_0"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:iface="http://telus.com/wsdl/CMO/InformationMgmt/ConsumerBillingAccountManagementService_1"
                  xmlns:rr="http://xmlschema.tmi.telus.com/srv/CMO/InformationMgmt/ConsumerBillingAccountMgmtSvcRequestResponse_v1"
                  name="ConsumerBillingAccountManagementService_v1_2.wsdl"
                  targetNamespace="http://telus.com/wsdl/CMO/InformationMgmt/ConsumerBillingAccountManagementService_1"><!--	Generated File:
			This file was generated by the following xslt:
				http://xmlschema.tmi.telus.com/xsd/common/utils/xmlToWsdl/xmlToWsdl_v2_8.xslt
			Based on a ServiceDefinition.xml file that conforms to the following schema:
				http://xmlschema.tmi.telus.com/xsd/common/utils/xmlToWsdl/ServiceDefinition_v3_0.xsd
			--><wsdl:documentation>
            This service provides management services for customer billing account related applications
        </wsdl:documentation>
   <wsdl:types>
      <xsd:schema targetNamespace="http://telus.com/wsdl/CMO/InformationMgmt/ConsumerBillingAccountManagementService_1">
         <xsd:import namespace="http://xmlschema.tmi.telus.com/srv/CMO/InformationMgmt/ConsumerBillingAccountMgmtSvcRequestResponse_v1"
                     schemaLocation="http://xmlschema.tmi.telus.com/srv/CMO/InformationMgmt/ConsumerBillingAccountMgmtSvcRequestResponse_v1_2.xsd"/>
         <xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/common/exceptions/Exceptions_v1_0"
                     schemaLocation="http://xmlschema.tmi.telus.com/xsd/common/exceptions/Exceptions_v1_0.xsd"/>
         <xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v1"
                     schemaLocation="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v1.xsd"/>
      </xsd:schema>
   </wsdl:types>
   <wsdl:message name="createBillingAccount">
      <wsdl:part name="parameters" element="rr:createBillingAccount"/>
   </wsdl:message>
   <wsdl:message name="createBillingAccountResponse">
      <wsdl:part name="result" element="rr:createBillingAccountResponse"/>
   </wsdl:message>
   <wsdl:message name="getBillingAccount">
      <wsdl:part name="parameters" element="rr:getBillingAccount"/>
   </wsdl:message>
   <wsdl:message name="getBillingAccountResponse">
      <wsdl:part name="result" element="rr:getBillingAccountResponse"/>
   </wsdl:message>
   <wsdl:message name="getBillingAccountListByCustomerId">
      <wsdl:part name="parameters" element="rr:getBillingAccountListByCustomerId"/>
   </wsdl:message>
   <wsdl:message name="getBillingAccountListByCustomerIdResponse">
      <wsdl:part name="result" element="rr:getBillingAccountListByCustomerIdResponse"/>
   </wsdl:message>
   <wsdl:message name="registerBillDeliveryMethod">
      <wsdl:part name="parameters" element="rr:registerBillDeliveryMethod"/>
   </wsdl:message>
   <wsdl:message name="registerBillDeliveryMethodResponse">
      <wsdl:part name="result" element="rr:registerBillDeliveryMethodResponse"/>
   </wsdl:message>
   <wsdl:message name="deregisterBillDeliveryMethod">
      <wsdl:part name="parameters" element="rr:deregisterBillDeliveryMethod"/>
   </wsdl:message>
   <wsdl:message name="deregisterBillDeliveryMethodResponse">
      <wsdl:part name="result" element="rr:deregisterBillDeliveryMethodResponse"/>
   </wsdl:message>
   <wsdl:message name="updateBillDelivery">
      <wsdl:part name="parameters" element="rr:updateBillDelivery"/>
   </wsdl:message>
   <wsdl:message name="updateBillDeliveryResponse">
      <wsdl:part name="result" element="rr:updateBillDeliveryResponse"/>
   </wsdl:message>
   <wsdl:message name="ping">
      <wsdl:part name="parameters" element="ping:ping"/>
   </wsdl:message>
   <wsdl:message name="pingResponse">
      <wsdl:part name="result" element="ping:pingResponse"/>
   </wsdl:message>
   <wsdl:message name="ServiceException">
      <wsdl:part name="fault" element="ex:ServiceException"/>
   </wsdl:message>
   <wsdl:message name="PolicyException">
      <wsdl:part name="fault" element="ex:PolicyException"/>
   </wsdl:message>
   <wsdl:portType name="ConsumerBillingAccountManagementService_v1_2_PortType">
      <wsdl:operation name="createBillingAccount">
         <wsdl:input message="iface:createBillingAccount"/>
         <wsdl:output message="iface:createBillingAccountResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="getBillingAccount">
         <wsdl:input message="iface:getBillingAccount"/>
         <wsdl:output message="iface:getBillingAccountResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="getBillingAccountListByCustomerId">
         <wsdl:input message="iface:getBillingAccountListByCustomerId"/>
         <wsdl:output message="iface:getBillingAccountListByCustomerIdResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="registerBillDeliveryMethod">
         <wsdl:input message="iface:registerBillDeliveryMethod"/>
         <wsdl:output message="iface:registerBillDeliveryMethodResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="deregisterBillDeliveryMethod">
         <wsdl:input message="iface:deregisterBillDeliveryMethod"/>
         <wsdl:output message="iface:deregisterBillDeliveryMethodResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="updateBillDelivery">
         <wsdl:input message="iface:updateBillDelivery"/>
         <wsdl:output message="iface:updateBillDeliveryResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="ping">
         <wsdl:input message="iface:ping"/>
         <wsdl:output message="iface:pingResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
   </wsdl:portType>
   <wsdl:binding name="ConsumerBillingAccountManagementService_v1_2_SOAP"
                 type="iface:ConsumerBillingAccountManagementService_v1_2_PortType">
      <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
      <wsdl:operation name="createBillingAccount">
         <wsdl:documentation>
            This operation creates a Billing Account.
        </wsdl:documentation>
         <soap:operation soapAction="createBillingAccount"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getBillingAccount">
         <wsdl:documentation>
            This operation returns Billing Account, given billing account number and billing system code.
        </wsdl:documentation>
         <soap:operation soapAction="getBillingAccount"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getBillingAccountListByCustomerId">
         <wsdl:documentation>
            This operation returns a list of all billing accounts, including all wireline and wireless accounts, of a customer regardless of the billing account status.  The service will return a maximum of 500 billing accounts.  If a customer has more than 500 accounts, an exception will be thrown.  It is not expected that a customer will have more than 500 billing accounts.
        </wsdl:documentation>
         <soap:operation soapAction="getBillingAccountListByCustomerId"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="registerBillDeliveryMethod">
         <wsdl:documentation>
            This operation register the bill delivery method for a consumer wireline billing account, e.g. paper bill, eBill or ePost.  
            It takes a billing system Id, billing account number and bill media entity.  
            It has no returns.
			Business rules and validations:
            A customer has one and only one bill delivery method.  So, this operation can be seen as change current bill delivery method
			Billing system ID equals consumer wireline billing system 
			If billing system Id and billing account number combination not found in the consumer wireline billing system, exception will be thrown.
            The bill delivery type will be validated against Ref PDS.
            If registering for eBill, eBill email is mandatory
            If registering for ePost, ePost User ID is mandatory            
        </wsdl:documentation>
         <soap:operation soapAction="registerBillDeliveryMethod"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="deregisterBillDeliveryMethod">
         <wsdl:documentation>
            This operation deregister the bill delivery method for a consumer wireline billing account, e.g. eBill or ePost.  
            This operation takes billing system Id, billing account number and bill media type to be deregistered.  Logically, it should be the current bill delivery method.  it is expected that client applications retrieves the current bill delivery method.
            It returns the resulting bill bill media object           
			Business rules and validations:
            A customer has one and only one bill delivery method			
			Billing system ID equals consumer wireline billing system (Enabler)
			If billing system Id and billing account number combination not found in the consumer wireline billing system, exception will be thrown.            			
			An exception will be thrown if the media type is not currently registered.			
			Since paper bill is the default billing method, it cannot be deregistered.  An exception will be thrown if bill media type of paper is pass in.
            When deregistering ePost, if customer ever has eBill set up, system will fall back eBill; otherwise, fall back to paper bill.
            If fall back to eBill, there must be a email address associate with billing account
            When deregistering eBill, system will fall back to paper bill.
            Paper bill cannot be deregistered.  RegisterBillDelivery method can be used to change paper bill to eBill or ePost.
        </wsdl:documentation>
         <soap:operation soapAction="deregisterBillDeliveryMethod"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="updateBillDelivery">
         <wsdl:documentation>
            This operation update wireline customer's bill media (e.g. Paper, eBill), bill notification method (email, SMS or both), as well as bill delivery address (email address, SMS number etc).  
            It takes a billing system Id, billing account number and bill media entity.  
            It has no returns.
			Business rules and validations:
            A customer has one and only one bill delivery method.  So, this operation can be seen as change current bill delivery method
			Billing system ID equals consumer wireline billing system 
			If billing system Id and billing account number combination not found in the consumer wireline billing system, exception will be thrown.
            The bill delivery type will be validated against Ref PDS.
            If registering for eBill, eBill email is mandatory
            If registering for ePost, ePost User ID is mandatory            
        </wsdl:documentation>
         <soap:operation soapAction="updateBillDelivery"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="ping">
         <wsdl:documentation/>
         <soap:operation soapAction="ping"/>
         <wsdl:input>
            <soap:body parts="parameters" use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body parts="result" use="literal"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:service name="ConsumerBillingAccountManagementService_v1_2">
      <wsdl:port name="ConsumerBillingAccountManagementServicePort"
                 binding="iface:ConsumerBillingAccountManagementService_v1_2_SOAP">
         <soap:address location="http://cm-custinfomgmt-west-dv01.tsl.telus.com/CMO/InformationMgmt/BillingAccountManagement/ConsumerBillingAccountManagementService_v1_2"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>