<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns:wss="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:ping="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v2"
                  xmlns:ex="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/Exceptions_v3"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:shttp="http://soa.com/wsdl/http"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:iface="http://telus.com/wsdl/MSO/MassMarketSalesMgmt/MarketOfferService_3"
                  xmlns:mos="http://xmlschema.tmi.telus.com/srv/MSO/MassMarketSalesMgmt/MarketOfferServiceRequestResponse_v3"
                  targetNamespace="http://telus.com/wsdl/MSO/MassMarketSalesMgmt/MarketOfferService_3"><!--	
	Generated File:
		This file was generated by the following xslt:
			http://xmlschema.tmi.telus.com/xsd/common/utils/xmlToWsdl/xmlToWsdl_v3_2.xslt
		Based on a ServiceDefinition.xml file that conforms to the following schema:
			http://xmlschema.tmi.telus.com/xsd/common/utils/xmlToWsdl/ServiceDefinition_v3_1.xsd
			--><wsdl:types>
      <xsd:schema targetNamespace="http://telus.com/wsdl/MSO/MassMarketSalesMgmt/MarketOfferService_3">
         <xsd:import namespace="http://xmlschema.tmi.telus.com/srv/MSO/MassMarketSalesMgmt/MarketOfferServiceRequestResponse_v3"
                     schemaLocation="http://xmlschema.tmi.telus.com/srv/MSO/MassMarketSalesMgmt/MarketOfferServiceRequestResponse_v3_0.xsd"/>
         <xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/Exceptions_v3"
                     schemaLocation="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/Exceptions_v3_0.xsd"/>
         <xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v2"
                     schemaLocation="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v2.xsd"/>
      </xsd:schema>
   </wsdl:types>
   <wsdl:message name="getAllBundleDiscountList">
      <wsdl:part name="parameters" element="mos:getAllBundleDiscountList"/>
   </wsdl:message>
   <wsdl:message name="getAllBundleDiscountListResponse">
      <wsdl:part name="result" element="mos:getAllBundleDiscountListResponse"/>
   </wsdl:message>
   <wsdl:message name="getActiveBundleDiscountList">
      <wsdl:part name="parameters" element="mos:getActiveBundleDiscountList"/>
   </wsdl:message>
   <wsdl:message name="getActiveBundleDiscountListResponse">
      <wsdl:part name="result" element="mos:getActiveBundleDiscountListResponse"/>
   </wsdl:message>
   <wsdl:message name="getEligibleBundleDiscountList">
      <wsdl:part name="parameters" element="mos:getEligibleBundleDiscountList"/>
   </wsdl:message>
   <wsdl:message name="getEligibleBundleDiscountListResponse">
      <wsdl:part name="result" element="mos:getEligibleBundleDiscountListResponse"/>
   </wsdl:message>
   <wsdl:message name="getBundleDiscountEligibleProductLineList">
      <wsdl:part name="parameters" element="mos:getBundleDiscountEligibleProductLineList"/>
   </wsdl:message>
   <wsdl:message name="getBundleDiscountEligibleProductLineListResponse">
      <wsdl:part name="result" element="mos:getBundleDiscountEligibleProductLineListResponse"/>
   </wsdl:message>
   <wsdl:message name="getMarketOfferList">
      <wsdl:part name="parameters" element="mos:getMarketOfferList"/>
   </wsdl:message>
   <wsdl:message name="getMarketOfferListResponse">
      <wsdl:part name="result" element="mos:getMarketOfferListResponse"/>
   </wsdl:message>
   <wsdl:message name="getMarketOfferDetail">
      <wsdl:part name="parameters" element="mos:getMarketOfferDetail"/>
   </wsdl:message>
   <wsdl:message name="getMarketOfferDetailResponse">
      <wsdl:part name="result" element="mos:getMarketOfferDetailResponse"/>
   </wsdl:message>
   <wsdl:message name="getSweetenerList">
      <wsdl:part name="parameters" element="mos:getSweetenerList"/>
   </wsdl:message>
   <wsdl:message name="getSweetenerListResponse">
      <wsdl:part name="result" element="mos:getSweetenerListResponse"/>
   </wsdl:message>
   <wsdl:message name="getSweetenerDetail">
      <wsdl:part name="parameters" element="mos:getSweetenerDetail"/>
   </wsdl:message>
   <wsdl:message name="getSweetenerDetailResponse">
      <wsdl:part name="result" element="mos:getSweetenerDetailResponse"/>
   </wsdl:message>
   <wsdl:message name="getBoltonOfferList">
      <wsdl:part name="parameters" element="mos:getBoltonOfferList"/>
   </wsdl:message>
   <wsdl:message name="getBoltonOfferListResponse">
      <wsdl:part name="result" element="mos:getBoltonOfferListResponse"/>
   </wsdl:message>
   <wsdl:message name="getBoltonOfferDetail">
      <wsdl:part name="parameters" element="mos:getBoltonOfferDetail"/>
   </wsdl:message>
   <wsdl:message name="getBoltonOfferDetailResponse">
      <wsdl:part name="result" element="mos:getBoltonOfferDetailResponse"/>
   </wsdl:message>
   <wsdl:message name="getOfferDetailByPerspectiveDate">
      <wsdl:part name="parameters" element="mos:getOfferDetailByPerspectiveDate"/>
   </wsdl:message>
   <wsdl:message name="getOfferDetailByPerspectiveDateResponse">
      <wsdl:part name="result" element="mos:getOfferDetailByPerspectiveDateResponse"/>
   </wsdl:message>
   <wsdl:message name="ping">
      <wsdl:part name="parameters" element="ping:ping"/>
   </wsdl:message>
   <wsdl:message name="pingResponse">
      <wsdl:part name="result" element="ping:pingResponse"/>
   </wsdl:message>
   <wsdl:message name="ServiceException">
      <wsdl:part name="fault" element="ex:ServiceException"/>
   </wsdl:message>
   <wsdl:portType name="MarketOfferService_v3_0_PortType">
      <wsdl:operation name="getAllBundleDiscountList">
         <wsdl:input message="iface:getAllBundleDiscountList"/>
         <wsdl:output message="iface:getAllBundleDiscountListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getActiveBundleDiscountList">
         <wsdl:input message="iface:getActiveBundleDiscountList"/>
         <wsdl:output message="iface:getActiveBundleDiscountListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getEligibleBundleDiscountList">
         <wsdl:input message="iface:getEligibleBundleDiscountList"/>
         <wsdl:output message="iface:getEligibleBundleDiscountListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getBundleDiscountEligibleProductLineList">
         <wsdl:input message="iface:getBundleDiscountEligibleProductLineList"/>
         <wsdl:output message="iface:getBundleDiscountEligibleProductLineListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getMarketOfferList">
         <wsdl:input message="iface:getMarketOfferList"/>
         <wsdl:output message="iface:getMarketOfferListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getMarketOfferDetail">
         <wsdl:input message="iface:getMarketOfferDetail"/>
         <wsdl:output message="iface:getMarketOfferDetailResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getSweetenerList">
         <wsdl:input message="iface:getSweetenerList"/>
         <wsdl:output message="iface:getSweetenerListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getSweetenerDetail">
         <wsdl:input message="iface:getSweetenerDetail"/>
         <wsdl:output message="iface:getSweetenerDetailResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getBoltonOfferList">
         <wsdl:input message="iface:getBoltonOfferList"/>
         <wsdl:output message="iface:getBoltonOfferListResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getBoltonOfferDetail">
         <wsdl:input message="iface:getBoltonOfferDetail"/>
         <wsdl:output message="iface:getBoltonOfferDetailResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="getOfferDetailByPerspectiveDate">
         <wsdl:input message="iface:getOfferDetailByPerspectiveDate"/>
         <wsdl:output message="iface:getOfferDetailByPerspectiveDateResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
      <wsdl:operation name="ping">
         <wsdl:input message="iface:ping"/>
         <wsdl:output message="iface:pingResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
      </wsdl:operation>
   </wsdl:portType>
   <wsdl:binding name="MarketOfferService_v3_0_SOAP"
                 type="iface:MarketOfferService_v3_0_PortType">
      <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
      <wsdl:operation name="getAllBundleDiscountList">
         <wsdl:documentation>getAllBundleDiscountList - Operation will provide consumers with the ability to retrieve all bundle discount.
          This is reference data retrieval; it does not do any eligible checking. The consumer of this service needs to determine if the customer is qualified for. 
          
      INPUTS:
      Retrieve all bundle discounts in the system.
      No input is required. 
      
      OUTPUTS:
      list bundle discounts in the system that include bundle discount name, description and enabler id and expiry date.

		Error Messages:
	  - bundle discount not found       
      </wsdl:documentation>
         <soap:operation soapAction="getAllBundleDiscountList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getActiveBundleDiscountList">
         <wsdl:documentation>getActiveBundleDiscountList - Operation will provide consumers with the ability to retrieve active bundle discount in market.
        This is reference data retrieval; it does not do any eligible checking. The consumer of this service needs to determine if the customer is qualified for. 
        
	    INPUTS:
	    Retrieve active bundle discounts in the market.
	    No input is required. 
	    
	    OUTPUTS:
	    list bundle discounts in the market that include bundle discount name, description and enabler id.

		Error Messages:
	  - bundle discount not found       

    </wsdl:documentation>
         <soap:operation soapAction="getActiveBundleDiscountList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getEligibleBundleDiscountList">
         <wsdl:documentation>getEligibleBundleDiscountList - Operation will provide consumers with the ability to retrieve bundle discount from PODS. 
	    It will take in list of product types to check against eligibility rule table in PODS and return Discount code,description, discount amount
	    per proudct line with the list of quilified product type with product line that are qualified for bundle discount. 
	
		INPUTS:
		Retrieve qualified bundle discounts
		list of product type
		- String:product type 
		- List:list of price plan associated with product type 
		
		OUTPUTS:
		list of bundle discount and list qualified product line and product service type map.

		Error Messages:
	  - bundle discount not found       

	</wsdl:documentation>
         <soap:operation soapAction="getEligibleBundleDiscountList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getBundleDiscountEligibleProductLineList">
         <wsdl:documentation>getBundleDiscountEligibleProductLineList - Operation will provide consumers with the ability to retrieve product type 
      and product line that participate in bundle discount. It will list of product types to retrieve the reference table regarding eligible product  
      line that are counted for bundle discount. 
  
	  INPUTS:
	  Retrieve qualified bundle discount product line infromation.
	  list of product type
	  - String:product type
	  - List: price plan associated with product type 
	  
	  OUTPUTS:
	  list qualified product line and product service type map.
  
		Error Messages:
	  - bundle discount not found       

  </wsdl:documentation>
         <soap:operation soapAction="getBundleDiscountEligibleProductLineList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getMarketOfferList">
         <wsdl:documentation>getMarketOfferList - Operation will provide consumers with the ability to retrieve active market offer that are 
          matched for the searching criteria, it will perform combination of search.  
          
	      INPUTS:
	      List of searching criteria. 
	      
	      OUTPUTS:
	      list of market offer header. 

       Error Messages:
        - offer not found. 
	      
	      </wsdl:documentation>
         <soap:operation soapAction="getMarketOfferList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getMarketOfferDetail">
         <wsdl:documentation>getMarketOfferDetail - Operation will provide consumers with the ability to retrieve market offer details that are 
            matched for input offer ids.  
            
        INPUTS:
        List of market offer id. 
        
        OUTPUTS:
        list of market offer detail. 
        
        
        
        Error Messages:
        - offer not found. 
        </wsdl:documentation>
         <soap:operation soapAction="getMarketOfferDetail"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getSweetenerList">
         <wsdl:documentation>getSweetenerList - Operation will provide consumers with the ability to retrieve active sweetener that are 
            matched for the searching criteria, it will perform combination of search.  
            
        INPUTS:
        List of searching criteria. 
        
        OUTPUTS:
        list of sweetener header. 
        
        
        
        Error Messages:
        - offer not found. 
        </wsdl:documentation>
         <soap:operation soapAction="getSweetenerList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getSweetenerDetail">
         <wsdl:documentation>getMarketOfferDetail - Operation will provide consumers with the ability to retrieve sweetener details that are 
              matched for input sweetener ids.  
              
          INPUTS:
          List of sweetener id. 
          
          OUTPUTS:
          list of sweetener detail. 
          
          
          
          Error Messages:
          - sweetener not found. 
          </wsdl:documentation>
         <soap:operation soapAction="getSweetenerDetail"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getBoltonOfferList">
         <wsdl:documentation>getBoltonOfferList - Operation will provide consumers with the ability to retrieve active bolton offers that are 
            matched for the searching criteria, it will perform combination of search.  
            
        INPUTS:
  		List of searching criteria:
			- String: channelOrgId(optional)
			- String: channelOrgType(optional)
			- String: channelOutletId(optional)
			- String: customerProvince(optional)
			- String: dealerProvince(optional)
			- String: dependencyProduct(optional)

      
        OUTPUTS:
        List of bolton header:
              - MarketOfferHeader: boltonOfferHeaderList
              
        Error Messages:
        	- offer not found. 
        </wsdl:documentation>
         <soap:operation soapAction="getBoltonOfferList"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getBoltonOfferDetail">
         <wsdl:documentation>getBoltonOfferDetail - Operation will provide consumers with the ability to retrieve bolton offer details that are 
              matched for input bolton offer ids.  
              
          INPUTS:
          List of bolton offer id.
          	 
          
          OUTPUTS:
          list of bolton offer detail. 
          
                  
          Error Messages:
          - bolton offer not found. 
          
          </wsdl:documentation>
         <soap:operation soapAction="getBoltonOfferDetail"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getOfferDetailByPerspectiveDate">
         <wsdl:documentation>getOfferDetailByPerspectiveDate - Operation will retrieve the marketOffer/sweetener/bolton offer from database directly (no cache) based on the offer id and perspective date.  
              it can be used to retrieve expired/effective/future offer/sweetener/bolton offer.
            
        INPUTS:
        	- long: offerId. 
        	- dateTime: perspectiveDate
        
        OUTPUTS:
        offer detail. 
              
        Error Messages:
        - offer not found. 
        </wsdl:documentation>
         <soap:operation soapAction="getOfferDetailByPerspectiveDate"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="ping">
         <wsdl:documentation/>
         <soap:operation soapAction="ping"/>
         <wsdl:input>
            <soap:body parts="parameters" use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body parts="result" use="literal"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:service name="MarketOfferService_v3_0">
      <wsdl:port name="MarketOfferServicePort" binding="iface:MarketOfferService_v3_0_SOAP">
         <soap:address location="http://um-marketoffer-west-dv01.tsl.telus.com/v3/mso/massmarketsalesmgmt/marketofferservice/marketofferservice-v3-0"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>