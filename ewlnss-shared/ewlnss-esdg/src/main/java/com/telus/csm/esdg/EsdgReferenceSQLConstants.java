package com.telus.csm.esdg;

public interface EsdgReferenceSQLConstants {

	/** The Constant SELECT_ID_SALES_CONTEXT_TXN_DATA_STMT. */
	public static final String SELECT_ID_SALES_CONTEXT_TXN_DATA_STMT = "SELECT SALES_CONTEXT_TXN_DATA_ID "
			+ "FROM SALES_CONTEXT_TXN_DATA "
			+ "WHERE SALES_CONTEXT_DATA_PARTITION_C = ? "
			+ "AND EXTERNAL_TXN_REF_ID = ? "
			+ "AND INTRACTN_START_TS > ?";
	
	/** The Constant SELECT_SALES_CONTEXT_TXN_DATA_BY_KEY_SET_STMT. */
	public static final String SELECT_SALES_CONTEXT_TXN_DATA_BY_KEY_SET_STMT = "SELECT SALES_CONTEXT_TXN_DATA_ID, INTRACTN_START_TS, EXTERNAL_TXN_REF_ID, "
			+ "SALES_CONTEXT_DATA_PARTITION_C, SALES_CONTEXT_DATA_TYPE_CD, SALES_TXN_DATA, USAGE_COUNT, "
			+ "CREATE_USER_ID, CREATE_TS, LAST_UPDT_USER_ID, LAST_UPDT_TS, LAST_READ_TS "
			+ "FROM SALES_CONTEXT_TXN_DATA "
			+ "WHERE SALES_CONTEXT_DATA_PARTITION_C = ? "
			+ "AND INTRACTN_START_TS > ? "
			+ "AND EXTERNAL_TXN_REF_ID IN ";

	/** The Constant INSERT_SALES_CONTEXT_TXN_DATA_STMT. */
	public static final String INSERT_SALES_CONTEXT_TXN_DATA_STMT = "INSERT INTO SALES_CONTEXT_TXN_DATA ("
			+ "SALES_CONTEXT_TXN_DATA_ID, INTRACTN_START_TS, EXTERNAL_TXN_REF_ID, SALES_CONTEXT_DATA_PARTITION_C, "
			+ "SALES_CONTEXT_DATA_TYPE_CD, SALES_TXN_DATA, USAGE_COUNT, CREATE_USER_ID, CREATE_TS, LAST_UPDT_USER_ID, LAST_UPDT_TS, LAST_READ_TS) "
			+ "VALUES (SALES_CONTEXT_TXN_DATA_SEQ.NEXTVAL,?,?,?,?,?,?,?,SYSDATE,?,?,?)";
			
	
	/** The Constant UPDATE_SALES_CONTEXT_TXN_DATA_STMT. */
	public static final String UPDATE_SALES_CONTEXT_TXN_DATA_STMT = "UPDATE SALES_CONTEXT_TXN_DATA SET "
			+ "SALES_TXN_DATA = ?, USAGE_COUNT = ?, "
			+ "LAST_UPDT_USER_ID = ?, LAST_UPDT_TS = ?, "
			+ "LAST_READ_TS = ?, SALES_CONTEXT_DATA_TYPE_CD = ? "
			+ "WHERE SALES_CONTEXT_TXN_DATA_ID = ?";

	/** The Constant MERGE_SALES_CONTEXT_TXN_DATA_STMT. */
	public static final String MERGE_SALES_CONTEXT_TXN_DATA_STMT = "MERGE INTO SALES_CONTEXT_TXN_DATA B "
			+ "USING (SELECT ? SALES_CONTEXT_TXN_DATA_ID, ? INTRACTN_START_TS, ? EXTERNAL_TXN_REF_ID, ? SALES_CONTEXT_DATA_PARTITION_C, ? SALES_CONTEXT_DATA_TYPE_CD, ? SALES_TXN_DATA, ? USAGE_COUNT, ? CREATE_USER_ID, ? LAST_UPDT_USER_ID, ? LAST_UPDT_TS, ? LAST_READ_TS FROM DUAL) S "
			+ "ON (B.SALES_CONTEXT_DATA_PARTITION_C = S.SALES_CONTEXT_DATA_PARTITION_C AND B.EXTERNAL_TXN_REF_ID = S.EXTERNAL_TXN_REF_ID) "
			+ "WHEN MATCHED THEN "
			+ "UPDATE SET B.SALES_CONTEXT_DATA_TYPE_CD = S.SALES_CONTEXT_DATA_TYPE_CD, B.SALES_TXN_DATA = S.SALES_TXN_DATA, B.USAGE_COUNT = S.USAGE_COUNT, B.LAST_UPDT_USER_ID = S.LAST_UPDT_USER_ID, B.LAST_UPDT_TS = S.LAST_UPDT_TS, B.LAST_READ_TS = S.LAST_READ_TS "
			+ "WHEN NOT MATCHED THEN "
			+ "INSERT (B.SALES_CONTEXT_TXN_DATA_ID, B.INTRACTN_START_TS, B.EXTERNAL_TXN_REF_ID, B.SALES_CONTEXT_DATA_PARTITION_C, B.SALES_CONTEXT_DATA_TYPE_CD, B.SALES_TXN_DATA, B.USAGE_COUNT, B.CREATE_USER_ID, B.CREATE_TS, B.LAST_UPDT_USER_ID, B.LAST_UPDT_TS, B.LAST_READ_TS) "
			+ "VALUES (SALES_CONTEXT_TXN_DATA_SEQ.NEXTVAL, S.INTRACTN_START_TS, S.EXTERNAL_TXN_REF_ID, S.SALES_CONTEXT_DATA_PARTITION_C, S.SALES_CONTEXT_DATA_TYPE_CD, S.SALES_TXN_DATA, S.USAGE_COUNT, S.CREATE_USER_ID, SYSDATE, S.LAST_UPDT_USER_ID, S.LAST_UPDT_TS, S.LAST_READ_TS)";

}
